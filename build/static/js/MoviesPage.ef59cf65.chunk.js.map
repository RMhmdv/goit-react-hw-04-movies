{"version":3,"sources":["services/moviesApi.js","components/MoviesPage/MoviesPage.js"],"names":["movie_id","a","config","url","axios","data","Error","cast","results","query","params","defaults","baseURL","api_key","language","api","fetchTrendingMovies","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchMoviesByQuery","MoviesPage","useState","movies","setMovies","setQuery","useRouteMatch","request","SetRequest","location","useLocation","useEffect","moviesApi","then","onSubmit","event","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","map","title","id","to","pathname","state","from"],"mappings":"mOAwBA,WAAiCA,GAAjC,mBAAAC,EAAA,sEAEUC,EAAS,CACbC,IAAI,SAAD,OAAWH,IAHpB,SAM2BI,IAAMF,EAAQF,GANzC,uBAMYK,EANZ,EAMYA,KANZ,kBAOWA,GAPX,gCASI,IAAIC,MAAM,2BATd,0D,kEAaA,WAA8BN,GAA9B,mBAAAC,EAAA,sEAEUC,EAAS,CACbC,IAAI,SAAD,OAAWH,EAAX,aAHT,SAM2BI,IAAMF,EAAQF,GANzC,uBAMYK,EANZ,EAMYA,KANZ,kBAOWA,EAAKE,MAPhB,gCASI,IAAID,MAAM,2BATd,0D,kEAaA,WAAiCN,GAAjC,mBAAAC,EAAA,sEAEUC,EAAS,CACbC,IAAI,SAAD,OAAWH,EAAX,aAHT,SAM2BI,IAAMF,EAAQF,GANzC,uBAMYK,EANZ,EAMYA,KANZ,kBAOWA,EAAKG,SAPhB,gCASI,IAAIF,MAAM,2BATd,0D,kEAaA,WAAkCG,GAAlC,mBAAAR,EAAA,sEAEUC,EAAS,CACbC,IAAI,eACJO,OAAQ,CACND,UALR,SAS2BL,IAAMF,GATjC,uBASYG,EATZ,EASYA,KATZ,kBAUWA,EAAKG,SAVhB,gCAYI,IAAIF,MAAM,2BAZd,0D,sBA1DAF,IAAMO,SAASC,QAHE,gCAIjBR,IAAMO,SAASD,OAAS,CACtBG,QAJc,mCAKdC,SAAU,SAuEZ,IAAMC,EAAM,CACVC,oBArEuB,uCAAG,gCAAAf,EAAA,sEAElBC,EAAS,CACbC,IAAI,uBAHkB,SAMDC,IAAMF,GANL,uBAMhBG,EANgB,EAMhBA,KANgB,kBAOjBA,EAAKG,SAPY,gCASxB,IAAIF,MAAM,2BATc,yDAAH,qDAsEvBW,kB,4CACAC,e,4CACAC,kB,4CACAC,mB,6CAGaL,O,+HCnFA,SAASM,IAAc,IAAD,EACPC,mBAAS,MADF,mBAC5BC,EAD4B,KACpBC,EADoB,OAETF,mBAAS,IAFA,mBAE5Bb,EAF4B,KAErBgB,EAFqB,KAG3BtB,EAAQuB,cAARvB,IAH2B,EAILmB,mBAAS,IAJJ,mBAI5BK,EAJ4B,KAInBC,EAJmB,KAK7BC,EAAWC,cAkBjB,OAPAC,qBAAU,WAENC,IAAUZ,mBAAmBO,GAASM,KAAKT,KAG5C,CAACG,IAGF,qCACE,uBAAMO,SAdW,SAACC,GACpBA,EAAMC,iBACNR,EAAWnB,IAYT,UACE,uBACE4B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,qBACZC,MAAOhC,EACPiC,SAzBoB,SAACP,GAC3BV,EAASU,EAAMQ,cAAcF,MAAMG,kBA0B/B,wBAAQP,KAAK,SAAb,SACE,+CAGHd,GACC,mCACE,6BACGA,EAAOsB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAK9C,EAAL,YAAY4C,GACpBG,MAAO,CACLC,KAAMtB,EAASoB,WAJrB,SAQE,6BAAcH,GAALC","file":"static/js/MoviesPage.ef59cf65.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"3b0a0f3678b03bfe7113d836939cb420\";\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: \"en-US\",\n};\n\nconst fetchTrendingMovies = async () => {\n  try {\n    const config = {\n      url: `trending/movie/week`,\n    };\n\n    const { data } = await axios(config);\n    return data.results;\n  } catch (error) {\n    new Error(\"No response from server\");\n  }\n};\n\nasync function fetchMovieDetails(movie_id) {\n  try {\n    const config = {\n      url: `movie/${movie_id}`,\n    };\n\n    const { data } = await axios(config, movie_id);\n    return data;\n  } catch (error) {\n    new Error(\"No response from server\");\n  }\n}\n\nasync function fetchMovieCast(movie_id) {\n  try {\n    const config = {\n      url: `movie/${movie_id}/credits`,\n    };\n\n    const { data } = await axios(config, movie_id);\n    return data.cast;\n  } catch (error) {\n    new Error(\"No response from server\");\n  }\n}\n\nasync function fetchMovieReviews(movie_id) {\n  try {\n    const config = {\n      url: `movie/${movie_id}/reviews`,\n    };\n\n    const { data } = await axios(config, movie_id);\n    return data.results;\n  } catch (error) {\n    new Error(\"No response from server\");\n  }\n}\n\nasync function fetchMoviesByQuery(query) {\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query,\n      },\n    };\n\n    const { data } = await axios(config);\n    return data.results;\n  } catch (error) {\n    new Error(\"No response from server\");\n  }\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchMoviesByQuery,\n};\n\nexport default api;\n\n//___________________________________________________________________________________\n// Api using fetch()\n// const baseURL = `https://api.themoviedb.org/3`;\n\n// function fetchTrendingMovies() {\n//   const url = `${baseURL}/trending/${media_type}/${time_window}?api_key=${key}`;\n//   return fetch(url)\n//     .then(response => response.json())\n//     .then(({ results }) => {\n//       return results;\n//     });\n// }\n","import { useState, useEffect } from \"react\";\nimport { NavLink, useRouteMatch, useLocation } from \"react-router-dom\";\nimport moviesApi from \"../../services/moviesApi\";\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const { url } = useRouteMatch();\n  const [request, SetRequest] = useState(\"\");\n  const location = useLocation();\n\n  const handleRequestChange = (event) => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    SetRequest(query);\n  };\n\n  useEffect(() => {\n    const renderMoviesByQyery = () => {\n      moviesApi.fetchMoviesByQuery(request).then(setMovies);\n    };\n    renderMoviesByQyery();\n  }, [request]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies here\"\n          value={query}\n          onChange={handleRequestChange}\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n      {movies && (\n        <>\n          <ul>\n            {movies.map(({ title, id }) => (\n              <NavLink\n                to={{\n                  pathname: `${url}/${id}`,\n                  state: {\n                    from: location.pathname,\n                  },\n                }}\n              >\n                <li key={id}>{title}</li>\n              </NavLink>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}